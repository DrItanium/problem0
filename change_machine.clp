(defrule s => (assert (r (readline))))
(defrule c ?f <- (r ?c&~EOF) => (retract ?f) (bind ?i (string-to-field ?c)) (assert (r (readline)) (z ?i 25 10 5 1)) (format t "%d cents:%n" ?i))
(defrule t ?f <- (r EOF) => (retract ?f))
(defrule z ?f <- (z ?v ?c $?r) => (retract ?f) (bind ?d (div ?v ?c)) (assert (z (- ?v (* ?d ?c)) ?r)) (if (> ?d 0) then (format t "%d x %d cents%n" ?d ?c)))
(reset) (run) (exit)
